<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>SUSE Manager Documentation</title>
<date>2019-02-15</date>
</info>
<part xml:id="book.mgr.architecture">
<title>SUSE Manager Architecture</title>
<chapter xml:id="_diagram_component_legend">
<title>Diagram Component Legend</title>
<simpara>Unresolved directive in arch-legend-architecture.adoc - include::_partials/entities.adoc[]</simpara>
<simpara>These diagram components will be used in the following sections explaining the architecture of SUSE Manager. Components in SUSE Manager can communicate in three ways:</simpara>
<itemizedlist>
<listitem>
<simpara>One way</simpara>
</listitem>
<listitem>
<simpara>Two way</simpara>
</listitem>
<listitem>
<simpara>Scheduled (time based)</simpara>
</listitem>
</itemizedlist>
<section xml:id="_types_of_components">
<title>Types of Components</title>
<section xml:id="_one_way">
<title>One Way</title>
<simpara>Components that communicate in only one direction are represented by:</simpara>
<formalpara>
<title>One way communication between components</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/dia-one-way-component.png"/>
</imageobject>
<textobject><phrase>dia one way component</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
</section>
<section xml:id="_two_way">
<title>Two Way</title>
<simpara>Components that communicate in both directions are represented by:</simpara>
<formalpara>
<title>Two way communication between components</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/dia-two-way-component.png"/>
</imageobject>
<textobject><phrase>dia two way component</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
</section>
<section xml:id="_database_connections">
<title>Database Connections</title>
<simpara>A component that reads and writes to the database communicates in both directions are represented by:</simpara>
<formalpara>
<title>Two way communication between a component and the database(read and write)</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/dia-database-communication.png"/>
</imageobject>
<textobject><phrase>dia database communication</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
</section>
<section xml:id="_scheduled_time_based">
<title>Scheduled (Time based)</title>
<simpara>Components that run on a schedule are represented by:</simpara>
<formalpara>
<title>Component that runs on a schedule</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/dia-component-schedule.png"/>
</imageobject>
<textobject><phrase>dia component schedule</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
</section>
</section>
</chapter>
<chapter xml:id="chapt.arch.salt">
<title>Salt Architecture</title>

</chapter>
<chapter xml:id="_salt_stack_overview">
<title>Salt Stack Overview</title>
<simpara>Unresolved directive in arch-salt-stack-overview.adoc - include::_partials/entities.adoc[]</simpara>
<simpara>Some description&#8230;&#8203;</simpara>
<formalpara>
<title>Salt Stack Diagram</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/dia-salt-stack.png"/>
</imageobject>
<textobject><phrase>dia salt stack</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
</chapter>
<chapter xml:id="_salt_core">
<title>Salt Core</title>
<simpara>Unresolved directive in arch-salt-stack-core.adoc - include::_partials/entities.adoc[]</simpara>
<simpara>Description&#8230;&#8203;</simpara>
<formalpara>
<title>Salt Core</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/dia-salt-stack-core-block.png"/>
</imageobject>
<textobject><phrase>dia salt stack core block</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
</chapter>
<chapter xml:id="salt-contact-methods-overview">
<title>Salt Contact Methods</title>
<simpara>Unresolved directive in arch-salt-contact-method-overview.adoc - include::_partials/entities.adoc[]</simpara>
<section xml:id="_choosing_a_contact_method_for_salt">
<title>Choosing a Contact Method for Salt</title>
<simpara>SUSE Manager provides several methods for communication between client and server.
All commands that the SUSE Manager server sends to its clients will be routed through one of these contact methods.</simpara>
<simpara>The contact method you select for Salt will depend on your network infrastructure.
The following sections provide a starting point for selecting a method which best suits your network environment.</simpara>
<itemizedlist>
<listitem>
<simpara><link linkend="arch-contact-method-salt-pull.adoc">Salt Pull</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="arch-contact-method-salt-ssh-push.adoc">Salt SSH Push</link></simpara>
</listitem>
<listitem>
<simpara><link linkend="arch-contact-method-salt-ssh-push-tunnel.adoc">Salt SSH Push and Tunnel</link></simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter xml:id="_salt_pull">
<title>Salt Pull</title>

</chapter>
<chapter xml:id="arch.contact.methods.saltssh.push">
<title>Salt SSH Push</title>
<simpara>Unresolved directive in arch-contact-method-salt-ssh-push.adoc - include::_partials/entities.adoc[]</simpara>
<simpara>Salt SSH Push is intended to be used in environments where your Salt clients cannot reach the SUSE Manager server directly to regularly checking in and, for example, fetch package updates.</simpara>
<note>
<title>Push via SSH</title>
<simpara>This feature is not related to Push via SSH for the traditional clients.
For Push via SSH, see <xref linkend="bp.contact.methods.ssh.push"/>.</simpara>
</note>
<section xml:id="_overview">
<title>Overview</title>
<figure>
<title>Push via Salt SSH Contact Method</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/salt-ssh-contact-taigon.png" width="80%"/>
</imageobject>
<textobject><phrase>salt ssh contact taigon</phrase></textobject>
</mediaobject>
</figure>
<simpara>Salt provides &#8220;Salt SSH&#8221;
 (<literal role="command">salt-ssh</literal>), a feature to manage clients from a server.
It works without installing Salt related software on clients.
Using Salt SSH there is no need to have minions connected to the Salt master.
Using this as a SUSE Manager connect method, this feature provides similar functionality for Salt clients as the traditional Push via SSH feature for traditional clients.</simpara>
<simpara>This feature allows:</simpara>
<itemizedlist>
<listitem>
<simpara>Managing Salt entitled systems with the Push via SSH contact method using Salt SSH.</simpara>
</listitem>
<listitem>
<simpara>Bootstrapping such systems.</simpara>
</listitem>
</itemizedlist>
</section>
<section xml:id="_requirements">
<title>Requirements</title>
<itemizedlist>
<listitem>
<simpara>SSH daemon must be running on the remote system and reachable by the <literal role="systemitem">salt-api</literal> daemon (typically running on the SUSE Manager server).</simpara>
</listitem>
<listitem>
<simpara>Python must be available on the remote system (Python must be supported by the installed Salt). Currently: python 2.6.</simpara>
</listitem>
</itemizedlist>
<note>
<title>Unsupported Systems</title>
<simpara>Red Hat Enterprise Linux
and CentOS versions &#8656; 5 are not supported because they do not have Python 2.6 by default.</simpara>
</note>
</section>
<section xml:id="_bootstrapping">
<title>Bootstrapping</title>
<simpara>To bootstrap a Salt SSH system, proceed as follows:</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Open the <menuchoice><guimenu>Bootstrap Minions</guimenu> <guimenuitem>] dialog in the Web UI (menu:Systems[Bootstrapping</guimenuitem></menuchoice> ).</simpara>
</listitem>
<listitem>
<simpara>Fill out the required fields. Select an <menuchoice><guimenu>Activation Key</guimenu> <guimenuitem>] with the menu:Push via SSH[</guimenuitem></menuchoice> contact method configured. For more information about activation keys, see <xref linkend="ref.webui.systems.activ-keys"/>.</simpara>
</listitem>
<listitem>
<simpara>Check the <guimenu>Manage system completely via SSH</guimenu> option.</simpara>
</listitem>
<listitem>
<simpara>Confirm with clicking the <guimenu>Bootstrap</guimenu> button.</simpara>
</listitem>
</orderedlist>
<simpara>Now the system will be bootstrapped and registered in SUSE Manager.
If done successfully, it will appear in the <guimenu>Systems</guimenu> list.</simpara>
</section>
<section xml:id="_configuration">
<title>Configuration</title>
<simpara>There are two kinds of parameters for Push via Salt SSH:</simpara>
<itemizedlist>
<listitem>
<simpara>Bootstrap-time parameters - configured in the <guimenu>Bootstrapping</guimenu> page:</simpara>
<itemizedlist>
<listitem>
<simpara>Host</simpara>
</listitem>
<listitem>
<simpara>Activation key</simpara>
</listitem>
<listitem>
<simpara>Password - used only for bootstrapping, not saved anywhere; all future SSH sessions are authorized via a key/certificate pair</simpara>
</listitem>
</itemizedlist>
</listitem>
<listitem>
<simpara>Persistent parameters - configured SUSE Manager-wide:</simpara>
<itemizedlist>
<listitem>
<simpara>sudo user - same as in <xref linkend="bp.contact.methods.ssh.push.sudo"/>.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_action_execution">
<title>Action Execution</title>
<simpara>The Push via Salt SSH feature uses a taskomatic job to execute scheduled actions using <literal role="command">salt-ssh</literal>.
The taskomatic job periodically checks for scheduled actions and executes them.
While on traditional clients with SSH push configured only <literal role="command">rhn_check</literal> is executed via SSH, the Salt SSH push job executes a complete <literal role="command">salt-ssh</literal> call based on the scheduled action.</simpara>
</section>
<section xml:id="_known_limitation">
<title>Known Limitation</title>
<itemizedlist>
<listitem>
<simpara>OpenSCAP auditing is not available on Salt SSH minions.</simpara>
</listitem>
<listitem>
<simpara>Beacons do not work with Salt SSH.</simpara>
<itemizedlist>
<listitem>
<simpara>Installing a package on a system using <literal role="command">zypper</literal> will not invoke the package refresh.</simpara>
</listitem>
<listitem>
<simpara>Virtual Host functions (for example, a host to guests) will not work if the virtual host system is Salt SSH-based.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</section>
<section xml:id="_for_more_information">
<title>For More Information</title>
<simpara>For more information, see</simpara>
<itemizedlist>
<listitem>
<simpara><link xl:href="https://wiki.microfocus.com/index.php/SUSE_Manager/SaltSSHServerPush">https://wiki.microfocus.com/index.php/SUSE_Manager/SaltSSHServerPush</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://docs.saltstack.com/en/latest/topics/ssh/">https://docs.saltstack.com/en/latest/topics/ssh/</link></simpara>
</listitem>
</itemizedlist>
</section>
</chapter>
<chapter xml:id="_salt_ssh_push_tunnel">
<title>Salt SSH Push &amp; Tunnel</title>

</chapter>
<chapter xml:id="_boostrapping_ui">
<title>Boostrapping UI</title>

</chapter>
<chapter xml:id="_onboarding_and_registration">
<title>Onboarding and Registration</title>

</chapter>
<chapter xml:id="chapt.arch.traditional">
<title>Traditional Architecture</title>

</chapter>
<chapter xml:id="_the_traditional_stack">
<title>The Traditional Stack</title>
<simpara>Unresolved directive in arch-the-legacy-stack.adoc - include::_partials/entities.adoc[]</simpara>
<formalpara>
<title>The Traditional Stack</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="images/dia-traditional-stack.png"/>
</imageobject>
<textobject><phrase>dia traditional stack</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
</chapter>
<chapter xml:id="bp.systems.management">
<title>Traditional Contact Methods Overview</title>
<simpara>Unresolved directive in arch-legacy-contact-method-overview.adoc - include::_partials/entities.adoc[]</simpara>
<section xml:id="_selecting_a_contact_method">
<title>Selecting a Contact Method</title>
<simpara>SUSE Manager provides several methods for communication between client and server.
All commands that the SUSE Manager server sends to its clients will be routed through one of these contact methods.</simpara>
<simpara>The contact method you select will depend on your network infrastructure.
The following sections provide a starting point for selecting a method which best suits your network environment.</simpara>
</section>
</chapter>
<chapter xml:id="bp.contact.methods.rhnsd">
<title>Traditional Contact Method (rhnsd)</title>
<simpara>Unresolved directive in arch-legacy-stack-rhnsd.adoc - include::_partials/entities.adoc[]</simpara>
<section xml:id="_the_default_contact_method">
<title>The Default Contact Method</title>
<simpara>The SUSE Manager <emphasis role="strong">rhnsd</emphasis> daemon runs on client systems and periodically connects with SUSE Manager to check for new updates and notifications.
The daemon, which runs in the background, is started by <emphasis role="strong">rhnsd.service</emphasis>.
By default, it will check every 4 hours for new actions, therefore it may take some time for your clients to begin updating after actions have been scheduled for them.</simpara>
<simpara>To check for updates, <emphasis role="strong">rhnsd</emphasis> runs the external <emphasis role="strong">mgr_check</emphasis> program located in <literal>/usr/sbin/</literal>.
This is a small application that establishes the network connection to SUSE Manager.
The SUSE Manager daemon does not listen on any network ports or talk to the network directly.
All network activity is done via the <emphasis role="strong">mgr_check</emphasis> utility.</simpara>
<warning>
<title>Auto accepting (EULAs)</title>
<simpara>When new packages or updates are installed on the client using SUSE Manager, any end user licence agreements (EULAs) are automatically accepted.
To review a package EULA, open the package detail page in the Web UI.</simpara>
</warning>
<simpara>This figure provides an overview of the default <emphasis role="strong">rhnsd</emphasis> process path.
All items left of the <emphasis role="strong">Python XMLRPC server</emphasis> block represent processes running on an SUSE Manager client.</simpara>
<figure>
<title>rhnsd Contact Method</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/dia-rhnsd-taigon.png" width="80%"/>
</imageobject>
<textobject><phrase>dia rhnsd taigon</phrase></textobject>
</mediaobject>
</figure>
<section xml:id="_configuring_suse_manager_rhnsd_daemon">
<title>Configuring SUSE Manager rhnsd Daemon</title>
<simpara>The SUSE Manager daemon can be configured by editing the file on the client:</simpara>
<screen>/etc/sysconfig/rhn/rhnsd</screen>
<simpara>This is the configuration file the rhnsd initialization script uses.
An important parameter for the daemon is its check-in frequency.
The default interval time is four hours (240 minutes). If you modify the configuration file, you must as root restart the daemon with:</simpara>
<screen>systemctl rhnsd restart</screen>
<important>
<title>Minimum Allowed Check-in Parameter</title>
<simpara>The minimum allowed time interval is one hour (60 minutes). If you set the interval below one hour, it will change back to the default of 4 hours (240 minutes).</simpara>
</important>
</section>
<section xml:id="_viewing_rhnsd_daemon_status">
<title>Viewing rhnsd Daemon Status</title>
<simpara>As the {ruser} you may view the status of rhnsd by typing the command:</simpara>
<screen>systemctl status rhnsd</screen>
</section>
</section>
</chapter>
<chapter xml:id="bp.contact.methods.osad">
<title>Traditional Contact Method (osad)</title>
<simpara>Unresolved directive in arch-legacy-stack-osad.adoc - include::_partials/entities.adoc[]</simpara>
<simpara>OSAD is an alternative contact method between SUSE Manager and its clients.
By default, SUSE Manager uses <literal role="systemitem">rhnsd</literal>, which contacts the server every four hours to execute scheduled actions.
OSAD allows registered client systems to execute scheduled actions immediately.</simpara>
<simpara>OSAD has several distinct components:</simpara>
<itemizedlist>
<listitem>
<simpara>The <literal role="systemitem">osa-dispatcher</literal> service runs on the server, and uses database checks  to determine if clients need to be pinged, or if actions need to be executed.</simpara>
</listitem>
<listitem>
<simpara>The <literal role="systemitem">osad</literal> service runs on the client. It responds to pings from <literal role="systemitem">osa-dispatcher</literal> and runs <literal role="command">mgr_check</literal> to execute actions when directed to do so.</simpara>
</listitem>
<listitem>
<simpara>The <literal role="systemitem">jabberd</literal> service is a daemon that uses the <literal role="systemitem">XMPP</literal> protocol for communication between the client and the server.
The <literal role="systemitem">jabberd</literal> service also handles authentication.</simpara>
</listitem>
<listitem>
<simpara>The <literal role="command">mgr_check</literal> tool runs on the client to execute actions.
It is triggered by communication from the <literal role="systemitem">osa-dispatcher</literal> service.</simpara>
</listitem>
</itemizedlist>
<simpara>The <literal role="systemitem">osa-dispatcher</literal> periodically runs a query to check when clients last showed network activity.
If it finds a client that has not shown activity recently, it will use <literal role="systemitem">jabberd</literal> to ping all <literal role="systemitem">osad</literal> instances running on all clients registered with your SUSE Manager server.
The <literal role="systemitem">osad</literal> instances respond to the ping using <literal role="systemitem">jabberd</literal>, which is running in the background on the server.
When the <literal role="systemitem">osa-dispatcher</literal> receives the response, it marks the client as online.
If the <literal role="systemitem">osa-dispatcher</literal> fails to receive a response within a certain period of time, it marks the client as offline.</simpara>
<simpara>When you schedule actions on an OSAD-enabled system, the task will be carried out  immediately.
The <literal role="systemitem">osa-dispatcher</literal> periodically checks clients for actions that need to be executed.
If an outstanding action is found, it uses <literal role="systemitem">jabberd</literal> to execute <literal role="command">mgr_check</literal> on the client, which will then execute the action.</simpara>
<figure>
<title>osad Contact Method</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/dia-osad.png"/>
</imageobject>
<textobject><phrase>dia osad</phrase></textobject>
</mediaobject>
</figure>
<section xml:id="_enabling_and_configuring_osad">
<title>Enabling and Configuring OSAD</title>
<simpara>This section covers enabling the <literal role="systemitem">osa-dispatcher</literal> and <literal role="systemitem">osad</literal> services, and performing initial setup.</simpara>
<simpara>OSAD clients use the fully qualified domain name (FQDN) of the server to communicate with the <literal role="systemitem">osa-dispatcher</literal> service.</simpara>
<simpara>SSL is required for <literal role="systemitem">osad</literal> communication.
If SSL certificates are not available, the daemon on your client systems will fail to connect.
Make sure your firewall rules are set to allow the required ports.
For more information, see <xref linkend="tab.install.ports.server"/>.</simpara>
<orderedlist numeration="arabic">
<title>Procedure: Enabling OSAD</title>
<listitem>
<simpara>On your SUSE Manager server, as the root user, start the <literal role="systemitem">osa-dispatcher</literal> service:</simpara>
<screen>systemctl start osa-dispatcher</screen>
</listitem>
<listitem>
<simpara>On each client machine, install the <literal role="systemitem">osad</literal> package from the <literal role="systemitem">Tools</literal> child channel.
The <literal role="systemitem">osad</literal> package should be installed on clients only.
If you install the <literal role="systemitem">osad</literal> package on your SUSE Manager Server, it will conflict with the <literal role="systemitem">osa-dispatcher</literal> package.</simpara>
</listitem>
<listitem>
<simpara>On the client systems, as the root user, start the <literal role="systemitem">osad</literal> service:</simpara>
<screen>systemctl start osad</screen>
<simpara>Because <literal role="systemitem">osad</literal> and <literal role="systemitem">osa-dispatcher</literal> are run as services, you can use standard commands to manage them, including <literal role="command">stop</literal>, <literal role="command">restart</literal>, and <literal role="command">status</literal>.</simpara>
</listitem>
</orderedlist>
<formalpara>
<title>Configuration and Log Files</title>
<para>Each OSAD component is configured by local configuration files.
We recommend you keep the default configuration parameters for all OSAD components.</para>
</formalpara>
<informaltable frame="all" rowsep="1" colsep="1">
<tgroup cols="3">
<colspec colname="col_1" colwidth="33.3333*"/>
<colspec colname="col_2" colwidth="33.3333*"/>
<colspec colname="col_3" colwidth="33.3334*"/>
<thead>
<row>
<entry align="left" valign="top">Component</entry>
<entry align="left" valign="top">Location</entry>
<entry align="left" valign="top">Path to Configuration File</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><literal role="systemitem">osa-dispatcher</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Server</simpara></entry>
<entry align="left" valign="top"><simpara><literal role="path">/etc/rhn/rhn.conf</literal> Section: <literal role="systemitem">OSA configuration</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal role="systemitem">osad</literal></simpara></entry>
<entry align="left" valign="top"><simpara>Client</simpara></entry>
<entry align="left" valign="top"><simpara><literal role="path">/etc/sysconfig/rhn/osad.conf</literal> <literal role="path">/etc/syseconfig/rhn/up2date</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal role="systemitem">osad</literal>  log file</simpara></entry>
<entry align="left" valign="top"><simpara>Client</simpara></entry>
<entry align="left" valign="top"><simpara><literal role="path">/var/log/osad</literal></simpara></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><literal role="systemitem">jabberd</literal> log file</simpara></entry>
<entry align="left" valign="top"><simpara>Both</simpara></entry>
<entry align="left" valign="top"><simpara><literal role="path">/var/log/messages</literal></simpara></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<formalpara>
<title>Troubleshooting OSAD</title>
<para>If your OSAD clients cannot connect to the server, or if the <literal role="systemitem">jabberd</literal> service takes a lot of time responding to port 5552, it could be because you have exceeded the open file count.</para>
</formalpara>
<simpara>Every client needs one always-open TCP connection to the server, which consumes a single file handler.
If the number of file handlers currently open exceeds the maximum number of files that <literal role="systemitem">jabberd</literal> is allowed to use, <literal role="systemitem">jabberd</literal> will queue the requests, and refuse connections.</simpara>
<simpara>To resolve this issue, you can increase the file limits for <literal role="systemitem">jabberd</literal> by editing the <literal role="path">/etc/security/limits.conf</literal> configuration file and adding these lines:</simpara>
<screen>jabbersoftnofile5100
jabberhardnofile6000</screen>
<simpara>Calculate the limits required for your environment by adding 100 to the number of clients for the soft limit, and 1000 to the current number of clients for the soft limit.
In the example above, we have assumed 500 current clients, so the soft limit is 5100, and the hard limit is 6000.</simpara>
<simpara>You will also need to update the <literal role="systemitem">max_fds</literal> parameter in the <literal role="path">/etc/jabberd/c2s.xml</literal> file with your chosen hard limit:</simpara>
<screen>&lt;max_fds&gt;6000&lt;/max_fds&gt;</screen>
</section>
</chapter>
<chapter xml:id="_traditional_ssh_push">
<title>Traditional SSH Push</title>

</chapter>
<chapter xml:id="_traditional_ssh_pull">
<title>Traditional SSH Pull</title>

</chapter>
<chapter xml:id="chapt.arch.repositories">
<title>Repositories</title>

</chapter>
<chapter xml:id="_suse_manager_repositories_overview">
<title>SUSE Manager Repositories Overview</title>
<simpara>Unresolved directive in arch-repositories-overview.adoc - include::_partials/entities.adoc[]</simpara>
</chapter>
<chapter xml:id="_pool_repositories">
<title>Pool Repositories</title>

</chapter>
<chapter xml:id="_devel_repositories">
<title>Devel Repositories</title>

</chapter>
<chapter xml:id="_tool_repositories">
<title>Tool Repositories</title>

</chapter>
<chapter xml:id="_maintenance_repositories">
<title>Maintenance Repositories</title>

</chapter>
<chapter xml:id="_repository_synchronization">
<title>Repository Synchronization</title>

</chapter>
<chapter xml:id="chapt.arch.component.index">
<title>Component Index</title>

</chapter>
<chapter xml:id="_apache">
<title>Apache</title>
<simpara>Unresolved directive in arch-component-apache.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara>Apache is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Handles HTTP(S) communication</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Serves Static Files</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">HTTP gateway to: Apache Tomcat, the Python XMLRPC server and Cobbler</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for Apache are located in:</emphasis></simpara>
<screen>/var/log/apache2/error_log</screen>
</sidebar>
</chapter>
<chapter xml:id="_apache_tomcat">
<title>Apache Tomcat</title>
<simpara>Unresolved directive in arch-component-tomcat.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara>Apache Tomcat is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Contains servlet (Java) applications</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">The most important servlet is the RHN servlet:</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Handles the majority of the Web UI</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Public XMLRPC API</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for Apache Tomcat are located in:</emphasis></simpara>
<screen>/var/log/rhn/rhn_web_ui.log
/var/log/rhn/rhn_web_api.log
/var/log/tomcat/catalina.out
/var/log/tomcat/catalina.*.log</screen>
</sidebar>
</chapter>
<chapter xml:id="_python_xmlrpc_server">
<title>Python XMLRPC Server</title>
<simpara>Unresolved directive in arch-component-python-xmlrpc-server.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara>The Python XMLRPC Server is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Provides the private XMLRPC API</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Used primarily by client tools (mgr_check)</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for the Python XMLRPC Server are located in:</emphasis></simpara>
<screen>/var/log/apache2/error_log
/var/log/rhn/rhn_server_xmlrpc.log</screen>
</sidebar>
</chapter>
<chapter xml:id="_taskomatic">
<title>Taskomatic</title>
<simpara>Unresolved directive in arch-component-taskomatic.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara>Taskomatic is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Taskomatic handles most background jobs</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Patch applicability status refresh</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Server side scheduling</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">SSH push</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Cobbler database sync</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Repository synchronization and repository metadata generation</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">CVE audit pre-computation</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Cleanup Jobs</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Log files for taskomatic are located in:</emphasis></simpara>
<screen>/var/log/rhn/rhn_taskomatic_daemon.log
/var/log/rhn/reposync/*</screen>
</sidebar>
</chapter>
<chapter xml:id="_database">
<title>Database</title>
<simpara>Unresolved directive in arch-component-database.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara>The database is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Primarily stores application data</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Functions as a data exchange area between components</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for the database are located in:</emphasis></simpara>
<screen>/var/lib/pgsql/data/pg_log/*</screen>
</sidebar>
</chapter>
<chapter xml:id="_mgr_sync">
<title>mgr-sync</title>
<simpara>Unresolved directive in arch-component-mgr-sync.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara><emphasis role="strong">mgr-sync</emphasis> is a command line tool for SUSE Manager. It performs the following function.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">mgr-sync is a command line tool that synchronizes with SUSE Customer Center(SCC) and retrieves data and package repositories.</emphasis></simpara>
</listitem>
</itemizedlist>
<important>
<title>mgr-sync and Open Source Distributions</title>
<simpara><emphasis>This tool is designed for use with a support subscription or trial account with SUSE Customer Center. It is not required for open source distributions(OpenSUSE Leap , CentOS, Ubuntu, etc.).</emphasis></simpara>
</important>
</sidebar>
<sidebar>
<title>mgr-sync --help</title>
<simpara><emphasis>The following options are available for the <emphasis role="strong">mgr-sync</emphasis> command:</emphasis></simpara>
<screen>mgr-sync --help
usage: mgr-sync [-h] [--version] [-v] [-s] [-d {1,2,3}]
                {list,add,refresh,delete} ...

Synchronize SUSE Manager repositories.

optional arguments:
  -h, --help            show this help message and exit
  --version             Print mgr-sync version
  -v, --verbose         Be verbose
  -s, --store-credentials
                        Store credentials to the local dot file.
  -d {1,2,3}, --debug {1,2,3}
                        Log additional debug information depending on DEBUG

Subcommands:
  {list,add,refresh,delete}
    list                List channels, SCC organization credentials or
                        products
    add                 add channels, SCC organization credentials or products
    refresh             Refresh product, channel and subscription
    delete              Delete SCC organization credentials</screen>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for the mgr-sync tool are located in:</emphasis></simpara>
<screen>/var/log/rhn/mgr-sync.log
/var/log/rhn/rhn_web_api.log</screen>
</sidebar>
</chapter>
</part>
<part xml:id="_spacewalk_repo_sync">
<title>spacewalk-repo-sync</title>
<partintro>
<simpara>Unresolved directive in arch-component-spacewalk-repo-sync.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara><emphasis role="strong">spacewalk-repo-sync</emphasis> is a command line tool for SUSE Manager. It performs the following functions.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Copies a repo’s metadata to the database</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Copies a repo’s RPM files to the filesystem</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>mgr-sync --help</title>
<simpara><emphasis>The following options are available for the <emphasis role="strong">spacewalk-repo-sync</emphasis> tool:</emphasis></simpara>
<screen>spacewalk-repo-sync --help
Usage: spacewalk-repo-sync [options]

Options:
  -h, --help            show this help message and exit
  -l, --list            List the custom channels with the assosiated
                        repositories.
  -s, --show-packages   List all packages in a specified channel.
  -u URL, --url=URL     The url of the repository. Can be used multiple times.
  -c CHANNEL_LABEL, --channel=CHANNEL_LABEL
                        The label of the channel to sync packages to. Can be
                        used multiple times.
  -p PARENT_LABEL, --parent-channel=PARENT_LABEL
                        Synchronize the parent channel and all its child
                        channels.
  -d, --dry-run         Test run. No sync takes place.
  --latest              Sync latest packages only. Use carefully - you might
                        need to fix some dependencies on your own.
  -g CONFIG, --config=CONFIG
                        Configuration file
  -t REPO_TYPE, --type=REPO_TYPE
                        Force type of repository ("yum", "uln" and "deb" are
                        supported)
  -f, --fail            If a package import fails, fail the entire operation
  -n, --non-interactive
                        Do not ask anything, use default answers
  -i FILTERS, --include=FILTERS
                        Comma or space separated list of included packages or
                        package groups.
  -e FILTERS, --exclude=FILTERS
                        Comma or space separated list of excluded packages or
                        package groups.
  --email               e-mail a report of what was synced/imported
  --traceback-mail=TRACEBACK_MAIL
                        alternative email address(es) for sync output (--email
                        option)
  --no-errata           Do not sync errata
  --no-packages         Do not sync packages
  --sync-kickstart      Sync kickstartable tree
  --force-all-errata    Process metadata of all errata, not only missing.
  --batch-size=BATCH_SIZE
                        max. batch size for package import (debug only)
  -Y, --deep-verify     Do not use cached package checksums
  -v, --verbose         Verbose output. Possible to accumulate: -vvv</screen>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for the <emphasis role="strong">spacewalk-repo-sync</emphasis> tool are located in:</emphasis></simpara>
<screen>/var/log/rhn/reposync/*</screen>
</sidebar>
</partintro>
<chapter xml:id="_osa_dispatcher">
<title>osa-dispatcher</title>
<simpara>Unresolved directive in arch-component-osa-dispatcher.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara><emphasis role="strong">osa-dispatcher</emphasis> is a component of SUSE Manager. It performs the following function in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Monitors database for actions, informing osad clients when they need to run them</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>osa-dispatcher --help</title>
<simpara><emphasis>The following options are available for the <emphasis role="strong">osa-dispatcher</emphasis>:</emphasis></simpara>
<screen>osa-dispatcher --help
Usage: osa-dispatcher [options]

Options:
  -v, --verbose        Increase verbosity
  -N, --nodetach       Suppress backgrounding and detachment of the process
  --pid-file=PID_FILE  Write to this PID file
  --logfile=LOGFILE    Write log information to this file
  -h, --help           show this help message and exit</screen>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for the <emphasis role="strong">osa-dispatcher</emphasis> are located in:</emphasis></simpara>
<screen>/var/log/rhn/osa_dispatcher.log</screen>
</sidebar>
</chapter>
<chapter xml:id="_jabberd">
<title>jabberd</title>
<simpara>Unresolved directive in arch-component-jabberd.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara>jabberd is a component of SUSE Manager. It performs the following function in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Implements the Jabber (XMPP) protocol that osa-dispatcher uses</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for jabberd are located in:</emphasis></simpara>
<screen>/var/log/messages</screen>
</sidebar>
</chapter>
<chapter xml:id="_mgr_check">
<title>mgr_check</title>
<simpara>Unresolved directive in arch-component-mgr_check.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara><emphasis role="strong">mgr_check</emphasis> is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Client-side command line tool for legacy clients that checks for actions on the server and executes them</emphasis></simpara>
</listitem>
</itemizedlist>
<note>
<title>mgr_check and rhn_check</title>
<simpara><emphasis role="strong">mgr_check</emphasis> is symlinked to <emphasis role="strong">rhn_check</emphasis> in <literal>/usr/sbin/</literal>.
Both <emphasis>mgr_check</emphasis> and <emphasis>rhn_check</emphasis> can be used for checking for actions on the server.</simpara>
<screen>lrwxrwxrwx 1 root root           9 Sep  9 09:05 mgr_check -&gt; rhn_check*</screen>
</note>
</sidebar>
<sidebar>
<title>mgr_check --help</title>
<simpara><emphasis>The following options are available for the <emphasis role="strong">rhn_check</emphasis> on your legacy clients:</emphasis></simpara>
<screen>mgr_check --help
Usage: rhn_check [options]

Options:
  -v, --verbose         Show additional output. Repeat for more detail.
  --proxy=PROXY         Specify an http proxy to use
  --proxyUser=PROXYUSER
                        Specify a username to use with an authenticated http
                        proxy
  --proxyPassword=PROXYPASSWORD
                        Specify a password to use with an authenticated http
                        proxy
  --version             show program's version number and exit
  -h, --help            show this help message and exit</screen>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for the <emphasis role="strong">mgr_check</emphasis> are located on your legacy clients in:</emphasis></simpara>
<screen>/var/log/up2date</screen>
</sidebar>
</chapter>
<chapter xml:id="_zypp_plugin_spacewalk">
<title>zypp-plugin-spacewalk</title>
<simpara>Unresolved directive in arch-component-plugin-zypp-spacewalk.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara><emphasis role="strong">zypp-plugin-spacewalk</emphasis> is a component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Client-side add-on to zypper for legacy clients</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Exposes SUSE Manager channels as zypper repositories</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">The plugin is not required on salt-minions</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for the <emphasis role="strong">zypp-plugin-spacewalk</emphasis> are located on your legacy clients in:</emphasis></simpara>
<screen>/var/log/zypper.log
/var/log/zypp/*</screen>
</sidebar>
</chapter>
<component-rhnsd xml:id="_rhnsd">
<title>rhnsd</title>
<simpara>Unresolved directive in arch-component-rhnsd.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara><emphasis role="strong">rhnsd</emphasis> is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Client-side daemon for legacy clients</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Periodically calls mgr_check(symlinked to rhn_check)</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Randomizes check time not to overload the server</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>rhnsd --help</title>
<simpara>The following options are available for use with rhnsd on your legacy clients:</simpara>
<screen>rhnsd --help
Usage: rhnsd [OPTION...]
Spacewalk Services Daemon

  -f, --foreground           Run in foreground
  -i, --interval=MINS        Connect to Spacewalk every MINS minutes
  -?, --help                 Give this help list
      --usage                Give a short usage message
  -V, --version              Print program version

Mandatory or optional arguments to long options are also mandatory or optional
for any corresponding short options.</screen>
</sidebar>
</component-rhnsd>
<chapter xml:id="_osad">
<title>osad</title>
<simpara>Unresolved directive in arch-component-osad.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara><emphasis role="strong">osad</emphasis> is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Client-side daemon for legacy clients</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Calls mgr_check(rhn_check) when notified by Jabber</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>osad --help</title>
<simpara>The following options are available for use with <emphasis role="strong">osad</emphasis> on your legacy clients:</simpara>
<screen>osad --help
Usage: osad [options]

Options:
  -v, --verbose         Increase verbosity
  -N, --nodetach        Suppress backgrounding and detachment of the process
  --pid-file=PID_FILE   Write to this PID file
  --logfile=LOGFILE     Write log information to this file
  --cfg=CFG             Use this configuration file for defaults
  --jabber-server=JABBER_SERVER
                        Primary jabber server to connect to
  -h, --help            show this help message and exit</screen>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for <emphasis role="strong">osad</emphasis> are located in:</emphasis></simpara>
<screen>/var/log/osad</screen>
</sidebar>
</chapter>
<chapter xml:id="_salt_master">
<title>salt-master</title>
<simpara>Unresolved directive in arch-component-salt-master.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara>The <emphasis role="strong">salt-master</emphasis> is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Core process of Salt on the server side</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Provides communication with salt minions</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Handles Salt jobs, publishes to the Salt event Bus</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Handles minion responses</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Manages states, highstates, pillar information, etc</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>salt-master --help</title>
<simpara>The following options are available for the <emphasis role="strong">salt-master</emphasis>. The following list is not comprehensive, for more information see: <link xl:href="http://docs.saltstack.com">The Saltstack Docs</link></simpara>
<simpara><emphasis role="strong">Options:</emphasis></simpara>
<screen>salt-master --help
Usage: salt-master [options]

The Salt Master, used to control the Salt Minions

Options:
  --version             show program's version number and exit
  -V, --versions-report
                        Show program's dependencies version number and exit.
  -h, --help            show this help message and exit
  --saltfile=SALTFILE   Specify the path to a Saltfile. If not passed, one
                        will be searched for in the current working directory.
  -c CONFIG_DIR, --config-dir=CONFIG_DIR
                        Pass in an alternative configuration directory.
                        Default: '/etc/salt'.
  -u USER, --user=USER  Specify user to run salt-master.
  -d, --daemon          Run the salt-master as a daemon.
  --pid-file=PIDFILE    Specify the location of the pidfile. Default:
                        '/var/run/salt-master.pid'.

  Logging Options:
    Logging options which override any settings defined on the
    configuration files.

    -l LOG_LEVEL, --log-level=LOG_LEVEL
                        Console logging log level. One of u'all', u'garbage',
                        u'trace', u'debug', u'profile', u'info', u'warning',
                        u'error', u'critical', u'quiet'. Default: 'warning'.
    --log-file=LOG_FILE
                        Log file path. Default: '/var/log/salt/master'.
    --log-file-level=LOG_LEVEL_LOGFILE
                        Logfile logging log level. One of u'all', u'garbage',
                        u'trace', u'debug', u'profile', u'info', u'warning',
                        u'error', u'critical', u'quiet'. Default: 'warning'.

You can find additional help about salt-master issuing "man salt-master" or on
http://docs.saltstack.com</screen>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for <emphasis role="strong">salt-master</emphasis> are located in:</emphasis></simpara>
<screen>/var/log/salt/master</screen>
</sidebar>
</chapter>
<chapter xml:id="_salt_api">
<title>salt-api</title>
<simpara>Unresolved directive in arch-component-salt-api.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara>The <emphasis role="strong">salt-api</emphasis> is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Internal API communicates the Java side of SUSE Manager with the salt-master</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Provides HTTPS and websocket interfaces with the salt-master</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Handles the SSH connections to minions (SSH Push)</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>salt-api --help</title>
<simpara>The following options are available for the <emphasis role="strong">salt-api</emphasis>. The following list is not comprehensive, for more information see: <link xl:href="http://docs.saltstack.com">The Saltstack Docs</link></simpara>
<simpara><emphasis role="strong">Options:</emphasis></simpara>
<screen>salt-api --help
Usage: salt-api [options]

The Salt API system manages network API connectors for the Salt Master

Options:
  --version             show program's version number and exit
  -V, --versions-report
                        Show program's dependencies version number and exit.
  -h, --help            show this help message and exit
  -c CONFIG_DIR, --config-dir=CONFIG_DIR
                        Pass in an alternative configuration directory.
                        Default: '/etc/salt'.
  -d, --daemon          Run the salt-api as a daemon.
  --pid-file=PIDFILE    Specify the location of the pidfile. Default:
                        '/var/run/salt-api.pid'.

  Logging Options:
    Logging options which override any settings defined on the
    configuration files.

    -l LOG_LEVEL, --log-level=LOG_LEVEL
                        Console logging log level. One of u'all', u'garbage',
                        u'trace', u'debug', u'profile', u'info', u'warning',
                        u'error', u'critical', u'quiet'. Default: 'warning'.
    --log-file=API_LOGFILE
                        Log file path. Default: '/var/log/salt/api'.
    --log-file-level=LOG_LEVEL_LOGFILE
                        Logfile logging log level. One of u'all', u'garbage',
                        u'trace', u'debug', u'profile', u'info', u'warning',
                        u'error', u'critical', u'quiet'. Default: 'warning'.

You can find additional help about salt-api issuing "man salt-api" or on
http://docs.saltstack.com</screen>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for <emphasis role="strong">salt-api</emphasis> are located in:</emphasis></simpara>
<screen>/var/log/salt/master
/var/log/salt/api</screen>
</sidebar>
</chapter>
<chapter xml:id="_salt_minion">
<title>salt-minion</title>
<simpara>Unresolved directive in arch-component-salt-minion.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara>The <emphasis role="strong">salt-minion</emphasis> is a primary component of SUSE Manager. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Client-side main process for Salt clients (only pull method)</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Communicates the client with salt-master via Salt event bus (ZeroMQ)</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Executes the actions received from the Salt master on the client (minion)</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>salt-minion --help</title>
<simpara>The following options are available for the <emphasis role="strong">salt-minion</emphasis>. The following list is not comprehensive, for more information see: <link xl:href="http://docs.saltstack.com">The Saltstack Docs</link></simpara>
<simpara><emphasis role="strong">Options:</emphasis></simpara>
<screen>salt-minion --help
Usage: salt-minion [options]

The Salt Minion, receives commands from a remote Salt Master

Options:
  --version             show program's version number and exit
  -V, --versions-report
                        Show program's dependencies version number and exit.
  -h, --help            show this help message and exit
  --saltfile=SALTFILE   Specify the path to a Saltfile. If not passed, one
                        will be searched for in the current working directory.
  -c CONFIG_DIR, --config-dir=CONFIG_DIR
                        Pass in an alternative configuration directory.
                        Default: '/etc/salt'.
  -u USER, --user=USER  Specify user to run salt-minion.
  -d, --daemon          Run the salt-minion as a daemon.
  --pid-file=PIDFILE    Specify the location of the pidfile. Default:
                        '/var/run/salt-minion.pid'.

  Logging Options:
    Logging options which override any settings defined on the
    configuration files.

    -l LOG_LEVEL, --log-level=LOG_LEVEL
                        Console logging log level. One of u'all', u'garbage',
                        u'trace', u'debug', u'profile', u'info', u'warning',
                        u'error', u'critical', u'quiet'. Default: 'warning'.
    --log-file=LOG_FILE
                        Log file path. Default: '/var/log/salt/minion'.
    --log-file-level=LOG_LEVEL_LOGFILE
                        Logfile logging log level. One of u'all', u'garbage',
                        u'trace', u'debug', u'profile', u'info', u'warning',
                        u'error', u'critical', u'quiet'. Default: 'warning'.

You can find additional help about salt-minion issuing "man salt-minion" or on
http://docs.saltstack.com</screen>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for <emphasis role="strong">salt-minion</emphasis> are located in:</emphasis></simpara>
<screen>/var/log/salt/minion</screen>
</sidebar>
</chapter>
<chapter xml:id="_salt_broker">
<title>salt-broker</title>
<simpara>Unresolved directive in arch-component-salt-broker.adoc - include::_partials/entities.adoc[]</simpara>
<sidebar>
<title>Functions</title>
<simpara>The <emphasis role="strong">salt-broker</emphasis> is a component of the SUSE Manager proxy. It performs the following functions in the stack.</simpara>
<itemizedlist>
<listitem>
<simpara><emphasis role="strong">Used only in the SUSE Manager Proxy for minions using pull method</emphasis></simpara>
</listitem>
<listitem>
<simpara><emphasis role="strong">Forwards the ZeroMQ Salt channels from SUSE Manager server to the proxied minions</emphasis></simpara>
</listitem>
</itemizedlist>
</sidebar>
<sidebar>
<title>Log Files</title>
<simpara><emphasis>Logs for <emphasis role="strong">salt-broker</emphasis> are located in:</emphasis></simpara>
<screen>/var/log/salt/broker</screen>
</sidebar>
</chapter>
</part>
</book>